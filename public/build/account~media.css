/**
 * Replace white space in the given $string with $replacement
 */

/****************************
* Block design
****************************/

/****************************
* Transitions
****************************/

/****************************
* Transformations
****************************/

/****************************
* Blocks Creation
****************************/

/****************************
* Colors
****************************/

/****************************
* Breakpoints
****************************/

/****************************
* Font
****************************/

/****************************
* Fontawesome Variables
****************************/

/****************************
* Animations
****************************/

/****************************
* Parametres
****************************/
.grid-container[data-v-f1f9f132] {
  position: relative;
}



/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/