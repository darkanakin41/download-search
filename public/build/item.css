/**
 * Replace white space in the given $string with $replacement
 */

/****************************
* Block design
****************************/

/****************************
* Transitions
****************************/

/****************************
* Transformations
****************************/

/****************************
* Blocks Creation
****************************/

/****************************
* Colors
****************************/

/****************************
* Breakpoints
****************************/

/****************************
* Font
****************************/

/****************************
* Fontawesome Variables
****************************/

/****************************
* Animations
****************************/

/****************************
* Parametres
****************************/
.tab-container[data-v-d1aabab2] {
  display: flex;
  flex-direction: row-reverse;
}
.tab-container .menu li a[data-v-d1aabab2] {
  border-bottom: 3px solid transparent;
  display: block;
  padding: 1rem 1.8rem;
  color: #79c44f;
  font-family: 'Roboto Condensed', sans-serif;
  text-transform: uppercase;
  font-weight: bold;
  opacity: 0.7;
  filter: alpha(opacity=70);
  -webkit-transition: all 0.35s linear;
  -o-transition: all 0.35s linear;
  transition: all 0.35s linear;
}
.tab-container .menu li a[data-v-d1aabab2]:hover {
  opacity: 1;
  filter: alpha(opacity=100);
  -webkit-transition: all 0.15s linear;
  -o-transition: all 0.15s linear;
  transition: all 0.15s linear;
}
.tab-container .menu li.active[data-v-d1aabab2] {
  background: transparent;
}
.tab-container .menu li.active a[data-v-d1aabab2] {
  opacity: 1;
  filter: alpha(opacity=100);
  background: transparent;
  color: #79c44f;
  border-color: #79c44f;
}


/**
 * Replace white space in the given $string with $replacement
 */

/****************************
* Block design
****************************/

/****************************
* Transitions
****************************/

/****************************
* Transformations
****************************/

/****************************
* Blocks Creation
****************************/

/****************************
* Colors
****************************/

/****************************
* Breakpoints
****************************/

/****************************
* Font
****************************/

/****************************
* Fontawesome Variables
****************************/

/****************************
* Animations
****************************/

/****************************
* Parametres
****************************/
.search-form[data-v-1adebda8] {
  position: relative;
}
.search-form[data-v-1adebda8]::before {
  font-family: "Font Awesome 5 Free";
  content: '\F002';
  font-weight: 900;
  display: block;
  position: absolute;
  top: 0.4rem;
  left: 0.9rem;
  z-index: 1;
  font-size: 1.75rem;
  color: #8a8a8a;
}
.search-form input[name="search"][data-v-1adebda8] {
  padding-left: 3rem;
  font-size: 1.3rem;
  height: 3.5rem;
  font-weight: 300;
  border: 1px solid #e0e0e0;
  background: #fefefe none repeat scroll 0 0;
}
.tab-container[data-v-1adebda8] {
  background: #515151;
}


/**
 * Replace white space in the given $string with $replacement
 */

/****************************
* Block design
****************************/

/****************************
* Transitions
****************************/

/****************************
* Transformations
****************************/

/****************************
* Blocks Creation
****************************/

/****************************
* Colors
****************************/

/****************************
* Breakpoints
****************************/

/****************************
* Font
****************************/

/****************************
* Fontawesome Variables
****************************/

/****************************
* Animations
****************************/

/****************************
* Parametres
****************************/
.grid-container[data-v-946a0aae] {
  margin-top: 15px;
}



/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvbGlicy90aGVtaW5nL19mdW5jdGlvbnMuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvY29tcG9uZW50cy9CbG9jay9UYWJiZWRGaWx0ZXIudnVlIiwid2VicGFjazovLy8uL2Fzc2V0cy9saWJzL3RoZW1pbmcvX21peGlucy5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9saWJzL3RoZW1pbmcvX3ZhcmlhYmxlcy5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zY3NzL2NvbW1vbi9jb25maWcuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvcGFnZS9JdGVtL1NlYXJjaC52dWUiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL2pzL3BhZ2UvSXRlbS9WaWV3LnZ1ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0NFRTs7QUNBRjs7NkJESTRCOztBQ3NENUI7OzZCRGxENEI7O0FDc0Y1Qjs7NkJEbEY0Qjs7QUNxRzVCOzs2QkRqRzRCOztBRWxCNUI7OzZCRnNCNEI7O0FFVTVCOzs2QkZONEI7O0FFWTVCOzs2QkZSNEI7O0FFc0I1Qjs7NkJGbEI0Qjs7QUV5QjVCOzs2QkZyQjRCOztBR3BDNUI7OzZCSHdDNEI7QUFnQzVCO0VBQ0k7RUFDQTtDQTdCSjtBQTJCQTtFQU9nQjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQ2FaO0VBRUE7RUFqQ0E7RUFDQTtFQUNBO0NEVEo7QUFZQTtFQzBCSTtFQUVBO0VBakNBO0VBQ0E7RUFDQTtDRERKO0FBSUE7RUF3QmdCO0NBeEJoQjtBQUFBO0VDMEJJO0VBRUE7RUREZ0I7RUFDQTtFQUNBO0NBckJwQjs7O0FEbEZBOztHS0VFOztBSEFGOzs2QkdJNEI7O0FIc0Q1Qjs7NkJHbEQ0Qjs7QUhzRjVCOzs2QkdsRjRCOztBSHFHNUI7OzZCR2pHNEI7O0FGbEI1Qjs7NkJFc0I0Qjs7QUZVNUI7OzZCRU40Qjs7QUZZNUI7OzZCRVI0Qjs7QUZzQjVCOzs2QkVsQjRCOztBRnlCNUI7OzZCRXJCNEI7O0FEcEM1Qjs7NkJDd0M0QjtBQStFNUI7RUFDSTtDQTVFSjtBQTJFQTtFQUlRO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NBM0VSO0FBOERBO0VBaUJRO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDQTNFUjtBQStFQTtFQUNJO0NBNUVKOzs7QUx4RUE7O0dNRUU7O0FKQUY7OzZCSUk0Qjs7QUpzRDVCOzs2QklsRDRCOztBSnNGNUI7OzZCSWxGNEI7O0FKcUc1Qjs7NkJJakc0Qjs7QUhsQjVCOzs2QkdzQjRCOztBSFU1Qjs7NkJHTjRCOztBSFk1Qjs7NkJHUjRCOztBSHNCNUI7OzZCR2xCNEI7O0FIeUI1Qjs7NkJHckI0Qjs7QUZwQzVCOzs2QkV3QzRCO0FBSTVCO0VBQ0k7Q0FESiIsImZpbGUiOiJpdGVtLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVwbGFjZSB3aGl0ZSBzcGFjZSBpbiB0aGUgZ2l2ZW4gJHN0cmluZyB3aXRoICRyZXBsYWNlbWVudFxuICovXG5AZnVuY3Rpb24gcmVwbGFjZVdoaXRlU3BhY2UoJHN0cmluZywgJHJlcGxhY2VtZW50IDogXCJcIikge1xuICAgIEB3aGlsZSAoc3RyLWluZGV4KCRzdHJpbmcsICcgJykgIT0gbnVsbCkge1xuICAgICAgICAkaW5kZXg6IHN0ci1pbmRleCgkc3RyaW5nLCAnICcpO1xuICAgICAgICAkc3RyaW5nOiBcIiN7c3RyLXNsaWNlKCRzdHJpbmcsIDAsICRpbmRleCAtIDEpfSN7JHJlcGxhY2VtZW50fSN7c3RyLXNsaWNlKCRzdHJpbmcsICRpbmRleCArIDEpfVwiO1xuICAgIH1cbiAgICBAcmV0dXJuICRzdHJpbmc7XG59XG4iLCIvKipcbiAqIFJlcGxhY2Ugd2hpdGUgc3BhY2UgaW4gdGhlIGdpdmVuICRzdHJpbmcgd2l0aCAkcmVwbGFjZW1lbnRcbiAqL1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBCbG9jayBkZXNpZ25cbioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIFRyYW5zaXRpb25zXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBUcmFuc2Zvcm1hdGlvbnNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEJsb2NrcyBDcmVhdGlvblxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogQ29sb3JzXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBCcmVha3BvaW50c1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogRm9udFxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogRm9udGF3ZXNvbWUgVmFyaWFibGVzXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBBbmltYXRpb25zXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBQYXJhbWV0cmVzXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4udGFiLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbn1cblxuLnRhYi1jb250YWluZXIgLm1lbnUgbGkgYSB7XG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDFyZW0gMS44cmVtO1xuICBjb2xvcjogIzc5YzQ0ZjtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8gQ29uZGVuc2VkJywgc2Fucy1zZXJpZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG9wYWNpdHk6IDAuNztcbiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTcwKTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zNXMgbGluZWFyO1xuICAtby10cmFuc2l0aW9uOiBhbGwgMC4zNXMgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zNXMgbGluZWFyO1xufVxuXG4udGFiLWNvbnRhaW5lciAubWVudSBsaSBhOmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTEwMCk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMTVzIGxpbmVhcjtcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDAuMTVzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMTVzIGxpbmVhcjtcbn1cblxuLnRhYi1jb250YWluZXIgLm1lbnUgbGkuYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi50YWItY29udGFpbmVyIC5tZW51IGxpLmFjdGl2ZSBhIHtcbiAgb3BhY2l0eTogMTtcbiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTEwMCk7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogIzc5YzQ0ZjtcbiAgYm9yZGVyLWNvbG9yOiAjNzljNDRmO1xufVxuXG4iLCJAaW1wb3J0IFwiZnVuY3Rpb25zXCI7XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEJsb2NrIGRlc2lnblxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbkBtaXhpbiBib3gtc2hhZG93KCRzaGFkb3cuLi4pIHtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6ICRzaGFkb3c7IC8vIGlPUyA8NC4zICYgQW5kcm9pZCA8NC4xXG4gICAgYm94LXNoYWRvdzogJHNoYWRvdztcbn1cblxuQG1peGluIGJvcmRlci1yYWRpdXMoJGJvcmRlci1yYWRpdXMuLi4pe1xuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XG4gICAgLW1vei1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcbiAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcbn1cblxuQG1peGluIHRydW5jYXRlKCRtYXhXaWR0aDogNDUwcHgpe1xuICAgIG1heC13aWR0aDogJG1heFdpZHRoO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuQG1peGluIGNsZWFyZml4KCkge1xuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICB9XG59XG5cbkBtaXhpbiBiYWNrZmFjZS12aXNpYmlsaXR5KCR2aXNpYmlsaXR5KSB7XG4gICAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiAkdmlzaWJpbGl0eTtcbiAgICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6ICR2aXNpYmlsaXR5O1xuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6ICR2aXNpYmlsaXR5O1xufVxuXG5AbWl4aW4gb3BhY2l0eSgkb3BhY2l0eSkge1xuICAgIG9wYWNpdHk6ICRvcGFjaXR5O1xuICAgIC8vIElFOCBmaWx0ZXJcbiAgICAkb3BhY2l0eS1pZTogKCRvcGFjaXR5ICogMTAwKTtcbiAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9JG9wYWNpdHktaWUpO1xufVxuXG5AbWl4aW4gcGxhY2Vob2xkZXIge1xuICAgIDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7QGNvbnRlbnR9XG4gICAgOi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAgIHtAY29udGVudH1cbiAgICA6Oi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAge0Bjb250ZW50fVxuICAgIDotbXMtaW5wdXQtcGxhY2Vob2xkZXIgICAgICB7QGNvbnRlbnR9XG59XG5cbkBtaXhpbiBpbXBvcnRHb29nbGVGb250KCRmb250TmFtZSkge1xuICAgICRmb250TmFtZTogcmVwbGFjZVdoaXRlU3BhY2UoJGZvbnROYW1lLCAnKycpO1xuICAgICR1cmw6IFwiaHR0cDovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9I3skZm9udE5hbWV9XCI7XG4gICAgQGltcG9ydCB1cmwoJHVybCk7XG59XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIFRyYW5zaXRpb25zXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuQG1peGluIGFuaW1hdGlvbigkYW5pbWF0aW9uKSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246ICRhbmltYXRpb247XG4gICAgLW8tYW5pbWF0aW9uOiAkYW5pbWF0aW9uO1xuICAgIGFuaW1hdGlvbjogJGFuaW1hdGlvbjtcbn1cbkBtaXhpbiB0cmFuc2l0aW9uKCR0cmFuc2l0aW9uLi4uKSB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcbiAgICAtby10cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcbiAgICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcbn1cbkBtaXhpbiB0cmFuc2l0aW9uLXByb3BlcnR5KCR0cmFuc2l0aW9uLXByb3BlcnR5Li4uKSB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uLXByb3BlcnR5OiAkdHJhbnNpdGlvbi1wcm9wZXJ0eTtcbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiAkdHJhbnNpdGlvbi1wcm9wZXJ0eTtcbn1cbkBtaXhpbiB0cmFuc2l0aW9uLWRlbGF5KCR0cmFuc2l0aW9uLWRlbGF5KSB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uLWRlbGF5OiAkdHJhbnNpdGlvbi1kZWxheTtcbiAgICB0cmFuc2l0aW9uLWRlbGF5OiAkdHJhbnNpdGlvbi1kZWxheTtcbn1cbkBtaXhpbiB0cmFuc2l0aW9uLWR1cmF0aW9uKCR0cmFuc2l0aW9uLWR1cmF0aW9uLi4uKSB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAkdHJhbnNpdGlvbi1kdXJhdGlvbjtcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAkdHJhbnNpdGlvbi1kdXJhdGlvbjtcbn1cbkBtaXhpbiB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbigkdGltaW5nLWZ1bmN0aW9uKSB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogJHRpbWluZy1mdW5jdGlvbjtcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogJHRpbWluZy1mdW5jdGlvbjtcbn1cbkBtaXhpbiB0cmFuc2l0aW9uLXRyYW5zZm9ybSgkdHJhbnNpdGlvbi4uLikge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gJHRyYW5zaXRpb247XG4gICAgLW1vei10cmFuc2l0aW9uOiAtbW96LXRyYW5zZm9ybSAkdHJhbnNpdGlvbjtcbiAgICAtby10cmFuc2l0aW9uOiAtby10cmFuc2Zvcm0gJHRyYW5zaXRpb247XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtICR0cmFuc2l0aW9uO1xufVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBUcmFuc2Zvcm1hdGlvbnNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5AbWl4aW4gb3BhY2l0eSgkb3BhY2l0eSkge1xuICAgIG9wYWNpdHk6ICRvcGFjaXR5O1xuICAgICRvcGFjaXR5LWllOiAoJG9wYWNpdHkgKiAxMDApO1xuICAgIGZpbHRlcjogYWxwaGEob3BhY2l0eT0kb3BhY2l0eS1pZSk7XG59XG5AbWl4aW4gdHJhbnNmb3JtKCR0cmFuc2Zvcm0uLi4pe1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiAkdHJhbnNmb3JtO1xuICAgIC1tb3otdHJhbnNmb3JtOiAkdHJhbnNmb3JtO1xuICAgIC1tcy10cmFuc2Zvcm06ICR0cmFuc2Zvcm07XG4gICAgdHJhbnNmb3JtOiAkdHJhbnNmb3JtO1xufVxuQG1peGluIHRyYW5zZm9ybS1zdHlsZSgkdHJhbnNmb3JtLXN0eWxlLi4uKXtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1zdHlsZTogJHRyYW5zZm9ybS1zdHlsZTtcbiAgICB0cmFuc2Zvcm0tc3R5bGU6ICR0cmFuc2Zvcm0tc3R5bGU7XG59XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEJsb2NrcyBDcmVhdGlvblxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuQG1peGluIG1ha2UtYnV0dG9uKCRjb2xvcjogIzMzMywgJGJnQ29sb3I6IHJnYmEoYmxhY2ssLjEpLCAkcmFkaXVzOiAyNHB4KXtcbiAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKGFsbCAuMjVzIGVhc2UtaW4tb3V0KTtcbiAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKCRyYWRpdXMpO1xuICAgIEBpbmNsdWRlIGJveC1zaGFkb3cobm9uZSk7XG4gICAgY29sb3I6ICRjb2xvcjtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudGl6ZSgkYmdDb2xvciwgLjUpO1xuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyxcbiAgICAmOmFjdGl2ZXtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbihhbGwgLjE1cyBlYXNlLWluLW91dCk7XG4gICAgICAgIGJhY2tncm91bmQ6ICRiZ0NvbG9yO1xuICAgICAgICBjb2xvcjogJGNvbG9yICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuXG5AbWl4aW4gbWFrZS1jYXJkKCRiZ0NvbG9yOiB3aGl0ZSwgJHJhZGl1czogM3B4LCAkcGFkZGluZzogMXJlbSkge1xuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oYWxsIC4yNXMgZWFzZS1pbi1vdXQpO1xuICAgIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMoJHJhZGl1cyk7XG4gICAgQGluY2x1ZGUgYm94LXNoYWRvdygwIDFweCAzcHggcmdiYSgwLDAsMCwuMzMpLCAwIDAgMCByZ2JhKDAsMCwwLDApKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmdDb2xvcjtcbiAgICBwYWRkaW5nOiAkcGFkZGluZztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAmOmhvdmVye1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKGFsbCAuMTVzIGVhc2UtaW4tb3V0KTtcbiAgICAgICAgQGluY2x1ZGUgYm94LXNoYWRvdygwIDFweCAzcHggcmdiYSgwLDAsMCwuMyksIDAgNHB4IDhweCByZ2JhKDAsMCwwLC4yKSk7XG4gICAgfVxufVxuIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogQ29sb3JzXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuJGRhcms6ICM1MTUxNTEgIWRlZmF1bHQ7XG5cbiR5ZWxsb3c6ICNlYWJkMjQgIWRlZmF1bHQ7XG4kZ3JlZW46ICM3OWM0NGYgIWRlZmF1bHQ7XG4kYmx1ZTogIzRlOWRjYiAhZGVmYXVsdDtcbiRwdXJwbGU6ICM4NjQ5OWMgIWRlZmF1bHQ7XG4kcGluazogI2RhNDZiYyAhZGVmYXVsdDtcbiRvcmFuZ2U6ICNlMTgzMTQgIWRlZmF1bHQ7XG4kcmVkOiAjYjczNjM2ICFkZWZhdWx0O1xuJGdyZXk6ICNjOWM5YzkgIWRlZmF1bHQ7XG5cbiR0ZXh0TGlnaHQ6IHRyYW5zcGFyZW50aXplKHdoaXRlLCAuMTMpO1xuXG4kZmFjZWJvb2s6ICMzYjU5OTg7XG4kZ2l0bGFiOiAjRTI0MzI5O1xuJGdvb2dsZXBsdXM6ICNkZDRiMzk7XG4kaW5zdGFncmFtOiAjY2Q0ODZiO1xuJGxpbmtlZGluOiAjMDA3N0I1O1xuJHJzczogI2ZmNTcyMjtcbiR0d2l0Y2g6ICM2NDQxQTU7XG4kdHdpdHRlcjogIzU1YWNlZTtcbiR5b3V0dWJlOiAjZGQ0YjM5O1xuXG4kcHJpbWFyeUNvbG9yIDogJGJsdWUgIWRlZmF1bHQ7XG4kc2Vjb25kYXJ5Q29sb3IgOiAkZGFyayAhZGVmYXVsdDtcbiRzdWNjZXNzQ29sb3IgOiAkZ3JlZW4gIWRlZmF1bHQ7XG4kd2FybmluZ3NDb2xvciA6ICRvcmFuZ2UgIWRlZmF1bHQ7XG4kYWxlcnRDb2xvciA6ICRyZWQgIWRlZmF1bHQ7XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEJyZWFrcG9pbnRzXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuJGJyZWFrcG9pbnRTbWFsbDogNDBlbSAhZGVmYXVsdDtcbiRicmVha3BvaW50TWVkaXVtOiA2NGVtO1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBGb250XG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4kd2VpZ2h0QWlybGluZSA6IDEwMDtcbiR3ZWlnaHRUaGluIDogMjAwO1xuJHdlaWdodExpZ2h0IDogMzAwO1xuJHdlaWdodFJlZ3VsYXIgOiA0MDA7XG4kd2VpZ2h0TWVkaXVtIDogNTAwO1xuJHdlaWdodE1lZGl1bUJvbGQgOiA2MDA7XG4kd2VpZ2h0Qm9sZCA6IDcwMDtcbiR3ZWlnaHRFeHRyYUJvbGQgOiA4MDA7XG4kd2VpZ2h0QmxhY2sgOiA5MDA7XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEZvbnRhd2Vzb21lIFZhcmlhYmxlc1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiRmb250YXdlc29tZUZhbWlseTogJ0ZvbnQgQXdlc29tZSA1IEZyZWUnO1xuJGZvbnRhd2Vzb21lUmVndWxhcldlaWdodDogJHdlaWdodFJlZ3VsYXI7XG4kZm9udGF3ZXNvbWVTb2xpZFdlaWdodDogJHdlaWdodEJsYWNrO1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBBbmltYXRpb25zXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuJG9wZW5pbmdEZWxheTogLjI1cztcbiRjdWJpY0Zhc3RJblNsb3dPdXQ6IGN1YmljLWJlemllciguNCwgMCwgLjIsIDEpO1xuIiwiQGltcG9ydCBcIi4uLy4uL2xpYnMvdGhlbWluZy92YXJpYWJsZXNcIjtcblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogUGFyYW1ldHJlc1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiRtYWluQ29sb3I6ICRncmVlbjtcbiRzdWJDb2xvcjogJGRhcms7XG5cbiRkcmF3ZXJXaWR0aCA6IDMwMHB4O1xuXG4kY2FyZFJhZGl1cyA6IDEwcHg7XG5cbiRmb250RmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZiAhZGVmYXVsdDtcbiRmb250RmFtaWx5Q29uZGVuc2VkOiAnUm9ib3RvIENvbmRlbnNlZCcsIGNvbmRlbnNlZCAhZGVmYXVsdDtcbiIsIi8qKlxuICogUmVwbGFjZSB3aGl0ZSBzcGFjZSBpbiB0aGUgZ2l2ZW4gJHN0cmluZyB3aXRoICRyZXBsYWNlbWVudFxuICovXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEJsb2NrIGRlc2lnblxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogVHJhbnNpdGlvbnNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIFRyYW5zZm9ybWF0aW9uc1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogQmxvY2tzIENyZWF0aW9uXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBDb2xvcnNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEJyZWFrcG9pbnRzXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBGb250XG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBGb250YXdlc29tZSBWYXJpYWJsZXNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEFuaW1hdGlvbnNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIFBhcmFtZXRyZXNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi5zZWFyY2gtZm9ybSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnNlYXJjaC1mb3JtOjpiZWZvcmUge1xuICBmb250LWZhbWlseTogXCJGb250IEF3ZXNvbWUgNSBGcmVlXCI7XG4gIGNvbnRlbnQ6ICdcXGYwMDInO1xuICBmb250LXdlaWdodDogOTAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDAuNHJlbTtcbiAgbGVmdDogMC45cmVtO1xuICB6LWluZGV4OiAxO1xuICBmb250LXNpemU6IDEuNzVyZW07XG4gIGNvbG9yOiAjOGE4YThhO1xufVxuXG4uc2VhcmNoLWZvcm0gaW5wdXRbbmFtZT1cInNlYXJjaFwiXSB7XG4gIHBhZGRpbmctbGVmdDogM3JlbTtcbiAgZm9udC1zaXplOiAxLjNyZW07XG4gIGhlaWdodDogMy41cmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTBlMGUwO1xuICBiYWNrZ3JvdW5kOiAjZmVmZWZlIG5vbmUgcmVwZWF0IHNjcm9sbCAwIDA7XG59XG5cbi50YWItY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZDogIzUxNTE1MTtcbn1cblxuIiwiLyoqXG4gKiBSZXBsYWNlIHdoaXRlIHNwYWNlIGluIHRoZSBnaXZlbiAkc3RyaW5nIHdpdGggJHJlcGxhY2VtZW50XG4gKi9cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogQmxvY2sgZGVzaWduXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBUcmFuc2l0aW9uc1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogVHJhbnNmb3JtYXRpb25zXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKiBCbG9ja3MgQ3JlYXRpb25cbioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIENvbG9yc1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogQnJlYWtwb2ludHNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEZvbnRcbioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEZvbnRhd2Vzb21lIFZhcmlhYmxlc1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogQW5pbWF0aW9uc1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiogUGFyYW1ldHJlc1xuKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuLmdyaWQtY29udGFpbmVyIHtcbiAgbWFyZ2luLXRvcDogMTVweDtcbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==*/